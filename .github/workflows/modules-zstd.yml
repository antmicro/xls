name: Modules (ZSTD)
on:
  # Avoid triggering on pushes to /all/ open PR branches.
  push:
    paths:
      - 'xls/modules/zstd/**'
  pull_request:
    branches:
      - main
    paths:
      - 'xls/modules/zstd/**'
  # This lets us trigger manually from the UI.
  workflow_dispatch:

jobs:
  test:
    name: Test ZSTD module (opt)
    runs-on:
      labels: ubuntu-22.04
    timeout-minutes: 600
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies via apt
        run: sudo apt-get install python3-distutils python3-dev python-is-python3 libtinfo5  build-essential liblapack-dev libblas-dev gfortran

      - name: Install Bazel
        run: |
          wget https://github.com/bazelbuild/bazelisk/releases/download/v1.20.0/bazelisk-linux-amd64 -O /usr/local/bin/bazel
          chmod +x /usr/local/bin/bazel

      - name: Bazel Build Tools (opt)
        run: |
          bazel build -c opt --test_output=errors -- //xls/dslx:interpreter_main //xls/dslx/ir_convert:ir_converter_main //xls/tools:opt_main //xls/tools:codegen_main

      - name: Build ZSTD Module (opt)
        run: |
          bazel build -c opt --test_output=errors -- //xls/modules/zstd:all

      - name: Test ZSTD Module - DSLX Tests (opt)
        if: ${{ !cancelled() }}
        run: |
          bazel test -c opt --test_output=errors -- $(bazel query 'filter(".*_dslx_test", kind(rule, //xls/modules/zstd/...))')

      - name: Test ZSTD Module - CC Tests (opt)
        if: ${{ !cancelled() }}
        run: |
          bazel test -c opt --test_output=errors -- $(bazel query 'filter(".*_cc_test", kind(rule, //xls/modules/zstd/...))')

      - name: Build ZSTD verilog targets (opt)
        if: ${{ !cancelled() }}
        run: |
          bazel build -c opt -- $(bazel query 'filter(".*_verilog", kind(rule, //xls/modules/zstd/...))')

      - name: Build and run ZSTD IR benchmark rules (opt)
        if: ${{ !cancelled() }}
        run: |
          bazel run -c opt -- $(bazel query 'filter(".*_ir_benchmark", kind(rule, //xls/modules/zstd/...))')

      - name: Build and run synthesis benchmarks of the ZSTD module (opt)
        if: ${{ !cancelled() }}
        run: |
          bazel run -c opt -- $(bazel query 'filter(".*_benchmark_synth", kind(rule, //xls/modules/zstd/...))')

      - name: Build ZSTD place and route targets (opt)
        if: ${{ !cancelled() }}
        run: |
          bazel build -c opt -- $(bazel query 'filter(".*_place_and_route", kind(rule, //xls/modules/zstd/...))')

      - name: Build and run Verilog simulation tests (opt)
        if: ${{ !cancelled() }}
        run: |
          bazel run -c opt -- $(bazel query 'filter(".*_cocotb_test", kind(rule, //xls/modules/zstd/...))')
