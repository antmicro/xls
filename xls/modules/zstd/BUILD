# Copyright 2024 The XLS Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Build rules for XLS ZSTD codec implementation.

load("@rules_hdl//place_and_route:build_defs.bzl", "place_and_route")
load("@rules_hdl//synthesis:build_defs.bzl", "benchmark_synth", "synthesize_rtl")
load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load(
    "//xls/build_rules:xls_build_defs.bzl",
    "xls_benchmark_ir",
    "xls_benchmark_verilog",
    "xls_dslx_ir",
    "xls_dslx_library",
    "xls_dslx_test",
    "xls_dslx_verilog",
)

package(
    default_applicable_licenses = ["//:license"],
    default_visibility = ["//xls:xls_users"],
    licenses = ["notice"],
)

xls_dslx_library(
    name = "math_dslx",
    srcs = [
        "math.x",
    ],
)

xls_dslx_test(
    name = "math_dslx_test",
    library = ":math_dslx",
    tags = ["manual"],
)

xls_dslx_library(
    name = "buffer_dslx",
    srcs = [
        "buffer.x",
    ],
)

xls_dslx_test(
    name = "buffer_dslx_test",
    library = ":buffer_dslx",
    tags = ["manual"],
)

xls_dslx_library(
    name = "window_buffer_dslx",
    srcs = [
        "window_buffer.x",
    ],
    deps = [
        ":buffer_dslx",
    ],
)

xls_dslx_test(
    name = "window_buffer_dslx_test",
    library = ":window_buffer_dslx",
    tags = ["manual"],
)

xls_dslx_verilog(
    name = "window_buffer_verilog",
    codegen_args = {
        "module_name": "WindowBuffer64",
        "delay_model": "asap7",
        "pipeline_stages": "2",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "WindowBuffer64",
    library = ":window_buffer_dslx",
    # TODO: 2024-01-25: Workaround for https://github.com/google/xls/issues/869
    # Force proc inlining and set last internal proc as top proc for IR optimization
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__window_buffer__WindowBuffer64__WindowBuffer_0__64_32_48_next",
    },
    tags = ["manual"],
    verilog_file = "window_buffer.v",
)

xls_benchmark_ir(
    name = "window_buffer_opt_ir_benchmark",
    src = ":window_buffer_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "2",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

verilog_library(
    name = "window_buffer_verilog_lib",
    srcs = [
        ":window_buffer.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "window_buffer_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "WindowBuffer64",
    deps = [
        ":window_buffer_verilog_lib",
    ],
)

benchmark_synth(
    name = "window_buffer_benchmark_synth",
    synth_target = ":window_buffer_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "window_buffer_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":window_buffer_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "magic_dslx",
    srcs = [
        "magic.x",
    ],
    deps = [
        ":buffer_dslx",
    ],
)

xls_dslx_test(
    name = "magic_dslx_test",
    library = ":magic_dslx",
    tags = ["manual"],
)

cc_library(
    name = "data_generator",
    srcs = ["data_generator.cc"],
    hdrs = ["data_generator.h"],
    data = [
        "@zstd//:decodecorpus",
    ],
    deps = [
        "//xls/common:subprocess",
        "//xls/common/file:filesystem",
        "//xls/common/file:get_runfile_path",
        "//xls/common/status:status_macros",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
        "@com_google_absl//absl/types:span",
    ],
)

xls_dslx_library(
    name = "frame_header_dslx",
    srcs = [
        "frame_header.x",
    ],
    deps = [
        ":buffer_dslx",
    ],
)

xls_dslx_library(
    name = "common_dslx",
    srcs = [
        "common.x",
    ],
    deps = [
        ":shift_buffer_dslx",
        "//xls/examples:ram_dslx",
    ],
)

xls_dslx_test(
    name = "frame_header_dslx_test",
    library = ":frame_header_dslx",
    tags = ["manual"],
)

xls_dslx_library(
    name = "frame_header_test_dslx",
    srcs = [
        "frame_header_test.x",
    ],
    deps = [
        ":buffer_dslx",
        ":frame_header_dslx",
    ],
)

cc_test(
    name = "frame_header_cc_test",
    srcs = [
        "frame_header_test.cc",
    ],
    data = [
        ":frame_header_test_dslx",
    ],
    shard_count = 50,
    deps = [
        ":data_generator",
        "//xls/common:xls_gunit_main",
        "//xls/common/file:filesystem",
        "//xls/common/file:get_runfile_path",
        "//xls/common/fuzzing:fuzztest",
        "//xls/common/status:matchers",
        "//xls/common/status:ret_check",
        "//xls/dslx:create_import_data",
        "//xls/dslx:import_data",
        "//xls/dslx:parse_and_typecheck",
        "//xls/dslx/ir_convert:convert_options",
        "//xls/dslx/ir_convert:ir_converter",
        "//xls/dslx/type_system:parametric_env",
        "//xls/ir:bits",
        "//xls/ir:ir_test_base",
        "//xls/ir:value",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/types:span",
        "@com_google_googletest//:gtest",
        "@zstd",
    ],
)

xls_dslx_verilog(
    name = "frame_header_verilog",
    codegen_args = {
        "module_name": "FrameHeaderDecoder",
        "delay_model": "asap7",
        "pipeline_stages": "9",
        "reset": "rst",
        "reset_data_path": "false",
        "use_system_verilog": "false",
    },
    dslx_top = "parse_frame_header_128",
    library = ":frame_header_test_dslx",
    tags = ["manual"],
    verilog_file = "frame_header.v",
)

xls_benchmark_ir(
    name = "frame_header_opt_ir_benchmark",
    src = ":frame_header_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "9",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

verilog_library(
    name = "frame_header_verilog_lib",
    srcs = [
        ":frame_header.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "frame_header_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "FrameHeaderDecoder",
    deps = [
        ":frame_header_verilog_lib",
    ],
)

benchmark_synth(
    name = "frame_header_benchmark_synth",
    synth_target = ":frame_header_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "frame_header_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":frame_header_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "raw_block_dec_dslx",
    srcs = [
        "raw_block_dec.x",
    ],
    deps = [
        ":buffer_dslx",
        ":common_dslx",
    ],
)

xls_dslx_test(
    name = "raw_block_dec_dslx_test",
    library = ":raw_block_dec_dslx",
    tags = ["manual"],
)

xls_dslx_verilog(
    name = "raw_block_dec_verilog",
    codegen_args = {
        "module_name": "RawBlockDecoder",
        "delay_model": "asap7",
        "pipeline_stages": "2",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "RawBlockDecoder",
    library = ":raw_block_dec_dslx",
    tags = ["manual"],
    verilog_file = "raw_block_dec.v",
)

xls_benchmark_ir(
    name = "raw_block_dec_opt_ir_benchmark",
    src = ":raw_block_dec_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "2",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

verilog_library(
    name = "raw_block_dec_verilog_lib",
    srcs = [
        ":raw_block_dec.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "raw_block_dec_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "RawBlockDecoder",
    deps = [
        ":raw_block_dec_verilog_lib",
    ],
)

benchmark_synth(
    name = "raw_block_dec_benchmark_synth",
    synth_target = ":raw_block_dec_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "raw_block_dec_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":raw_block_dec_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "rle_block_dec_dslx",
    srcs = [
        "rle_block_dec.x",
    ],
    deps = [
        ":buffer_dslx",
        ":common_dslx",
        "//xls/modules/rle:rle_common_dslx",
        "//xls/modules/rle:rle_dec_dslx",
    ],
)

xls_dslx_test(
    name = "rle_block_dec_dslx_test",
    library = ":rle_block_dec_dslx",
    tags = ["manual"],
)

xls_dslx_verilog(
    name = "rle_block_dec_verilog",
    codegen_args = {
        "module_name": "RleBlockDecoder",
        "delay_model": "asap7",
        "pipeline_stages": "3",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "RleBlockDecoder",
    library = ":rle_block_dec_dslx",
    # TODO: 2024-01-15: Workaround for https://github.com/google/xls/issues/869
    # Force proc inlining and set last internal proc as top proc for IR optimization
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__rle_block_dec__RleBlockDecoder__BatchPacker_0_next",
    },
    tags = ["manual"],
    verilog_file = "rle_block_dec.v",
)

xls_benchmark_ir(
    name = "rle_block_dec_opt_ir_benchmark",
    src = ":rle_block_dec_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "3",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

verilog_library(
    name = "rle_block_dec_verilog_lib",
    srcs = [
        ":rle_block_dec.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "rle_block_dec_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "RleBlockDecoder",
    deps = [
        ":rle_block_dec_verilog_lib",
    ],
)

benchmark_synth(
    name = "rle_block_dec_benchmark_synth",
    synth_target = ":rle_block_dec_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "rle_block_dec_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":rle_block_dec_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "block_header_dslx",
    srcs = [
        "block_header.x",
    ],
    deps = [
        ":buffer_dslx",
        ":common_dslx",
    ],
)

xls_dslx_test(
    name = "block_header_dslx_test",
    library = ":block_header_dslx",
    tags = ["manual"],
)

xls_dslx_library(
    name = "dec_mux_dslx",
    srcs = [
        "dec_mux.x",
    ],
    deps = [
        ":common_dslx",
    ],
)

xls_dslx_test(
    name = "dec_mux_dslx_test",
    library = ":dec_mux_dslx",
    tags = ["manual"],
)

xls_dslx_verilog(
    name = "dec_mux_verilog",
    codegen_args = {
        "module_name": "DecoderMux",
        "delay_model": "asap7",
        "pipeline_stages": "2",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "DecoderMux",
    library = ":dec_mux_dslx",
    tags = ["manual"],
    verilog_file = "dec_mux.v",
)

xls_benchmark_ir(
    name = "dec_mux_opt_ir_benchmark",
    src = ":dec_mux_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "2",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

verilog_library(
    name = "dec_mux_verilog_lib",
    srcs = [
        ":dec_mux.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "dec_mux_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "DecoderMux",
    deps = [
        ":dec_mux_verilog_lib",
    ],
)

benchmark_synth(
    name = "dec_mux_benchmark_synth",
    synth_target = ":dec_mux_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "dec_mux_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":dec_mux_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "dec_demux_dslx",
    srcs = [
        "dec_demux.x",
    ],
    deps = [
        ":block_header_dslx",
        ":common_dslx",
    ],
)

xls_dslx_test(
    name = "dec_demux_dslx_test",
    library = ":dec_demux_dslx",
    tags = ["manual"],
)

xls_dslx_verilog(
    name = "dec_demux_verilog",
    codegen_args = {
        "module_name": "DecoderDemux",
        "delay_model": "asap7",
        "pipeline_stages": "2",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "DecoderDemux",
    library = ":dec_demux_dslx",
    tags = ["manual"],
    verilog_file = "dec_demux.v",
)

xls_benchmark_ir(
    name = "dec_demux_opt_ir_benchmark",
    src = ":dec_demux_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "2",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

verilog_library(
    name = "dec_demux_verilog_lib",
    srcs = [
        ":dec_demux.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "dec_demux_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "DecoderDemux",
    deps = [
        ":dec_demux_verilog_lib",
    ],
)

benchmark_synth(
    name = "dec_demux_benchmark_synth",
    synth_target = ":dec_demux_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "dec_demux_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":dec_demux_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "5",
)

xls_dslx_library(
    name = "block_dec_dslx",
    srcs = [
        "block_dec.x",
    ],
    deps = [
        ":common_dslx",
        ":dec_demux_dslx",
        ":dec_mux_dslx",
        ":raw_block_dec_dslx",
        ":rle_block_dec_dslx",
    ],
)

xls_dslx_test(
    name = "block_dec_dslx_test",
    library = ":block_dec_dslx",
    tags = ["manual"],
)

xls_dslx_verilog(
    name = "block_dec_verilog",
    codegen_args = {
        "module_name": "BlockDecoder",
        "delay_model": "asap7",
        "pipeline_stages": "2",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "BlockDecoder",
    library = ":block_dec_dslx",
    # TODO: 2024-01-15: Workaround for https://github.com/google/xls/issues/869
    # Force proc inlining and set last internal proc as top proc for IR optimization
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__xls_modules_zstd_dec_mux__BlockDecoder__DecoderMux_0_next",
    },
    tags = ["manual"],
    verilog_file = "block_dec.v",
)

xls_benchmark_ir(
    name = "block_dec_opt_ir_benchmark",
    src = ":block_dec_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "2",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

verilog_library(
    name = "block_dec_verilog_lib",
    srcs = [
        ":block_dec.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "block_dec_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "BlockDecoder",
    deps = [
        ":block_dec_verilog_lib",
    ],
)

benchmark_synth(
    name = "block_dec_benchmark_synth",
    synth_target = ":block_dec_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "block_dec_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":block_dec_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "ram_printer_dslx",
    srcs = ["ram_printer.x"],
    deps = [
        "//xls/examples:ram_dslx",
    ],
)

xls_dslx_test(
    name = "ram_printer_dslx_test",
    library = ":ram_printer_dslx",
    tags = ["manual"],
)

xls_dslx_library(
    name = "sequence_executor_dslx",
    srcs = [
        "sequence_executor.x",
    ],
    deps = [
        ":common_dslx",
        ":ram_printer_dslx",
        "//xls/examples:ram_dslx",
    ],
)

xls_dslx_test(
    name = "sequence_executor_dslx_test",
    dslx_test_args = {
        "compare": "none",
    },
    library = ":sequence_executor_dslx",
    tags = ["manual"],
)

xls_dslx_verilog(
    name = "sequence_executor_verilog",
    codegen_args = {
        "module_name": "sequence_executor",
        "generator": "pipeline",
        "delay_model": "asap7",
        "ram_configurations": ",".join([
            "{ram_name}:1R1W:{rd_req}:{rd_resp}:{wr_req}:{wr_resp}:{latency}".format(
                latency = 5,
                ram_name = "ram{}".format(num),
                rd_req = "sequence_executor__rd_req_m{}_s".format(num),
                rd_resp = "sequence_executor__rd_resp_m{}_r".format(num),
                wr_req = "sequence_executor__wr_req_m{}_s".format(num),
                wr_resp = "sequence_executor__wr_resp_m{}_r".format(num),
            )
            for num in range(7)
        ]),
        "pipeline_stages": "8",
        "reset": "rst",
        "reset_data_path": "true",
        "reset_active_low": "false",
        "reset_asynchronous": "true",
        "flop_inputs": "false",
        "flop_single_value_channels": "false",
        "flop_outputs": "false",
        "worst_case_throughput": "1",
        "use_system_verilog": "false",
    },
    dslx_top = "SequenceExecutorZstd",
    library = ":sequence_executor_dslx",
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__sequence_executor__SequenceExecutorZstd__SequenceExecutor_0__64_0_0_0_13_8192_65536_next",
    },
    tags = ["manual"],
    verilog_file = "sequence_executor.v",
)

xls_benchmark_ir(
    name = "sequence_executor_ir_benchmark",
    src = ":sequence_executor_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "8",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

xls_benchmark_verilog(
    name = "sequence_executor_verilog_benchmark",
    tags = ["manual"],
    verilog_target = "sequence_executor_verilog",
)

verilog_library(
    name = "sequence_executor_lib",
    srcs = [
        ":sequence_executor.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "sequence_executor_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "sequence_executor",
    deps = [
        ":sequence_executor_lib",
    ],
)

benchmark_synth(
    name = "sequence_executor_benchmark_synth",
    synth_target = ":sequence_executor_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "sequence_executor_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":sequence_executor_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "repacketizer_dslx",
    srcs = [
        "repacketizer.x",
    ],
    deps = [
        ":common_dslx",
    ],
)

xls_dslx_test(
    name = "repacketizer_dslx_test",
    library = ":repacketizer_dslx",
    tags = ["manual"],
)

xls_dslx_verilog(
    name = "repacketizer_verilog",
    codegen_args = {
        "module_name": "Repacketizer",
        "delay_model": "asap7",
        "pipeline_stages": "2",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "Repacketizer",
    library = ":repacketizer_dslx",
    tags = ["manual"],
    verilog_file = "repacketizer.v",
)

xls_benchmark_ir(
    name = "repacketizer_opt_ir_benchmark",
    src = ":repacketizer_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "2",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

verilog_library(
    name = "repacketizer_verilog_lib",
    srcs = [
        ":repacketizer.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "repacketizer_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "Repacketizer",
    deps = [
        ":repacketizer_verilog_lib",
    ],
)

benchmark_synth(
    name = "repacketizer_benchmark_synth",
    synth_target = ":repacketizer_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "repacketizer_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":repacketizer_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "zstd_dec_dslx",
    srcs = [
        "zstd_dec.x",
    ],
    deps = [
        ":block_dec_dslx",
        ":block_header_dslx",
        ":buffer_dslx",
        ":common_dslx",
        ":frame_header_dslx",
        ":frame_header_test_dslx",
        ":magic_dslx",
        ":ram_printer_dslx",
        ":repacketizer_dslx",
        ":sequence_executor_dslx",
        "//xls/examples:ram_dslx",
    ],
)

xls_dslx_verilog(
    name = "zstd_dec_verilog",
    codegen_args = {
        "module_name": "ZstdDecoder",
        "generator": "pipeline",
        "delay_model": "asap7",
        "ram_configurations": ",".join([
            "{ram_name}:1R1W:{rd_req}:{rd_resp}:{wr_req}:{wr_resp}:{latency}".format(
                latency = 5,
                ram_name = "ram{}".format(num),
                rd_req = "zstd_dec__ram_rd_req_{}_s".format(num),
                rd_resp = "zstd_dec__ram_rd_resp_{}_r".format(num),
                wr_req = "zstd_dec__ram_wr_req_{}_s".format(num),
                wr_resp = "zstd_dec__ram_wr_resp_{}_r".format(num),
            )
            for num in range(7)
        ]),
        "pipeline_stages": "10",
        "reset": "rst",
        "reset_data_path": "true",
        "reset_active_low": "false",
        "reset_asynchronous": "true",
        "flop_inputs": "false",
        "flop_single_value_channels": "false",
        "flop_outputs": "false",
        "worst_case_throughput": "1",
        "use_system_verilog": "false",
    },
    dslx_top = "ZstdDecoder",
    library = ":zstd_dec_dslx",
    # TODO: 2024-01-15: Workaround for https://github.com/google/xls/issues/869
    # Force proc inlining for IR optimization
    opt_ir_args = {
        "inline_procs": "true",
    },
    tags = ["manual"],
    verilog_file = "zstd_dec.v",
)

xls_dslx_ir(
    name = "zstd_dec_test_ir",
    dslx_top = "ZstdDecoderTest",
    ir_file = "zstd_dec_test.ir",
    library = ":zstd_dec_dslx",
    tags = ["manual"],
)

cc_test(
    name = "zstd_dec_cc_test",
    size = "large",
    srcs = [
        "zstd_dec_test.cc",
    ],
    data = [
        ":zstd_dec_test.ir",
    ],
    shard_count = 50,
    deps = [
        ":data_generator",
        "//xls/common:xls_gunit_main",
        "//xls/common/file:filesystem",
        "//xls/common/file:get_runfile_path",
        "//xls/common/status:matchers",
        "//xls/common/status:ret_check",
        "//xls/interpreter:channel_queue",
        "//xls/interpreter:serial_proc_runtime",
        "//xls/ir",
        "//xls/ir:bits",
        "//xls/ir:channel",
        "//xls/ir:events",
        "//xls/ir:ir_parser",
        "//xls/ir:value",
        "//xls/jit:jit_proc_runtime",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/types:span",
        "@com_google_googletest//:gtest",
        "@zstd",
    ],
)

xls_benchmark_ir(
    name = "zstd_dec_opt_ir_benchmark",
    src = ":zstd_dec_verilog.opt.ir",
    benchmark_ir_args = {
        #TODO: rewrite ram in opt_ir step to perform valid IR benchmark
        "pipeline_stages": "1",
        "delay_model": "asap7",
    },
    tags = ["manual"],
)

verilog_library(
    name = "zstd_dec_verilog_lib",
    srcs = [
        ":zstd_dec.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "zstd_dec_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "ZstdDecoder",
    deps = [
        ":zstd_dec_verilog_lib",
    ],
)

benchmark_synth(
    name = "zstd_dec_benchmark_synth",
    synth_target = ":zstd_dec_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "zstd_dec_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":zstd_dec_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "shift_buffer_dslx",
    srcs = ["shift_buffer.x"],
    deps = [
        ":buffer_dslx",
    ],
)

xls_dslx_test(
    name = "shift_buffer_dslx_test",
    library = ":shift_buffer_dslx",
)

xls_dslx_verilog(
    name = "shift_buffer_verilog",
    codegen_args = {
        "module_name": "ShiftBuffer",
        "delay_model": "asap7",
        "pipeline_stages": "2",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "ShiftBufferInst",
    library = ":shift_buffer_dslx",
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__shift_buffer__ShiftBufferInst__ShiftBuffer_0__128_64_7_next",
    },
    verilog_file = "shift_buffer.v",
)

xls_benchmark_ir(
    name = "shift_buffer_opt_ir_benchmark",
    src = ":shift_buffer_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "2",
        "delay_model": "asap7",
    },
)

verilog_library(
    name = "shift_buffer_verilog_lib",
    srcs = [
        ":shift_buffer.v",
    ],
)

synthesize_rtl(
    name = "shift_buffer_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "ShiftBuffer",
    deps = [
        ":shift_buffer_verilog_lib",
    ],
)

benchmark_synth(
    name = "shift_buffer_benchmark_synth",
    synth_target = ":shift_buffer_synth_asap7",
)

place_and_route(
    name = "shift_buffer_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":shift_buffer_synth_asap7",
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "ram_wr_handler_dslx",
    srcs = ["ram_wr_handler.x"],
    deps = [
        "//xls/examples:ram_dslx",
    ],
)

xls_dslx_test(
    name = "ram_wr_handler_dslx_test",
    library = ":ram_wr_handler_dslx",
)

xls_dslx_verilog(
    name = "ram_rw_handler_verilog",
    codegen_args = {
        "module_name": "RamWrRespHandler",
        "delay_model": "asap7",
        "pipeline_stages": "1",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "RamWrRespHandlerInst",
    library = ":ram_wr_handler_dslx",
    opt_ir_args = {
        "top": "__ram_wr_handler__RamWrRespHandlerInst__RamWrRespHandler_0__32_next",
    },
    verilog_file = "ram_rw_handler.v",
)

xls_benchmark_ir(
    name = "ram_rw_handler_opt_ir_benchmark",
    src = ":ram_rw_handler_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "10",
        "delay_model": "asap7",
    },
)

verilog_library(
    name = "ram_rw_handler_verilog_lib",
    srcs = [
        ":ram_rw_handler.v",
    ],
)

synthesize_rtl(
    name = "ram_rw_handler_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "RamWrRespHandler",
    deps = [
        ":ram_rw_handler_verilog_lib",
    ],
)

benchmark_synth(
    name = "ram_rw_handler_benchmark_synth",
    synth_target = ":ram_rw_handler_synth_asap7",
)

place_and_route(
    name = "ram_rw_handler_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":ram_rw_handler_synth_asap7",
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "fse_proba_freq_dec_dslx",
    srcs = ["fse_proba_freq_dec.x"],
    deps = [
        ":common_dslx",
        ":ram_wr_handler_dslx",
        ":shift_buffer_dslx",
        "//xls/examples:ram_dslx",
    ],
)

xls_dslx_test(
    name = "fse_proba_freq_dec_dslx_test",
    library = ":fse_proba_freq_dec_dslx",
)

xls_dslx_verilog(
    name = "fse_proba_freq_dec_verilog",
    codegen_args = {
        "module_name": "FseProbaFreqDec",
        "generator": "pipeline",
        "delay_model": "asap7",
        "ram_configurations": "ram:1R1W:{rd_req}:{rd_resp}:{wr_req}:{wr_resp}:{latency}".format(
            latency = 5,
            rd_req = "fse_proba_freq_dec__rd_req_s",
            rd_resp = "fse_proba_freq_dec__rd_resp_r",
            wr_req = "fse_proba_freq_dec__wr_req_s",
            wr_resp = "fse_proba_freq_dec__wr_resp_r",
        ),
        "pipeline_stages": "6",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "FseProbaFreqDecoderInst",
    library = ":fse_proba_freq_dec_dslx",
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__fse_proba_freq_dec__FseProbaFreqDecoderInst__FseProbaFreqDecoder_0__64_32_8_10_1_256_10_next",
    },
    verilog_file = "fse_proba_freq_dec.v",
)

xls_benchmark_ir(
    name = "fse_proba_freq_dec_opt_ir_benchmark",
    src = ":fse_proba_freq_dec_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "10",
        "delay_model": "asap7",
        "inline_procs": "true",
        "reset": "rst",
        "ram_configurations": "ram:1R1W:{rd_req}:{rd_resp}:{wr_req}:{wr_resp}:{latency}".format(
            latency = 5,
            rd_req = "fse_proba_freq_dec__rd_req_s",
            rd_resp = "fse_proba_freq_dec__rd_resp_r",
            wr_req = "fse_proba_freq_dec__wr_req_s",
            wr_resp = "fse_proba_freq_dec__wr_resp_r",
        ),
    },
)

xls_benchmark_verilog(
    name = "fse_proba_freq_dec_verilog_benchmark",
    verilog_target = "fse_proba_freq_dec_verilog",
)

verilog_library(
    name = "fse_proba_freq_dec_lib",
    srcs = [
        ":fse_proba_freq_dec.v",
    ],
)

synthesize_rtl(
    name = "fse_proba_freq_dec_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "FseProbaFreqDec",
    deps = [
        ":fse_proba_freq_dec_lib",
    ],
)

benchmark_synth(
    name = "fse_proba_freq_dec_benchmark_synth",
    synth_target = ":fse_proba_freq_dec_asap7",
)

place_and_route(
    name = "fse_proba_freq_dec_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "detailed_routing",
    synthesized_rtl = ":fse_proba_freq_dec_asap7",
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "fse_table_iterator_dslx",
    srcs = ["fse_table_iterator.x"],
    deps = [
        ":common_dslx",
    ],
)

xls_dslx_test(
    name = "fse_table_iterator_dslx_test",
    library = ":fse_table_iterator_dslx",
)

xls_dslx_verilog(
    name = "fse_table_iterator_verilog",
    codegen_args = {
        "module_name": "FseTableIterator",
        "delay_model": "asap7",
        "pipeline_stages": "1",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "FseTableIterator",
    library = ":fse_table_iterator_dslx",
    verilog_file = "fse_table_iterator.v",
)

xls_benchmark_ir(
    name = "fse_table_iterator_opt_ir_benchmark",
    src = ":fse_table_iterator_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "10",
        "delay_model": "asap7",
    },
)

verilog_library(
    name = "fse_table_iterator_verilog_lib",
    srcs = [
        ":fse_table_iterator.v",
    ],
)

synthesize_rtl(
    name = "fse_table_iterator_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "FseTableIterator",
    deps = [
        ":fse_table_iterator_verilog_lib",
    ],
)

benchmark_synth(
    name = "fse_table_iterator_benchmark_synth",
    synth_target = ":fse_table_iterator_synth_asap7",
)

place_and_route(
    name = "fse_table_iterator_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":fse_table_iterator_synth_asap7",
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "command_constructor_dslx",
    srcs = ["command_constructor.x"],
    deps = [
        ":common_dslx",
    ],
)

xls_dslx_test(
    name = "command_constructor_dslx_test",
    dslx_test_args = {"compare": "none"},
    library = ":command_constructor_dslx",
)

xls_dslx_verilog(
    name = "command_constructor_verilog",
    codegen_args = {
        "module_name": "CommandConstructor",
        "delay_model": "asap7",
        "pipeline_stages": "2",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "CommandConstructor",
    library = ":command_constructor_dslx",
    verilog_file = "command_constructor.v",
)

xls_benchmark_ir(
    name = "command_constructor_opt_ir_benchmark",
    src = ":command_constructor_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "8",
        "delay_model": "asap7",
    },
)

xls_benchmark_verilog(
    name = "command_constructor_verilog_benchmark",
    verilog_target = "command_constructor_verilog",
)

verilog_library(
    name = "command_constructor_lib",
    srcs = [
        ":command_constructor.v",
    ],
)

synthesize_rtl(
    name = "command_constructor_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "CommandConstructor",
    deps = [
        ":command_constructor_lib",
    ],
)

benchmark_synth(
    name = "command_constructor_benchmark_synth",
    synth_target = ":command_constructor_asap7",
)

place_and_route(
    name = "command_constructor_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.3",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":command_constructor_asap7",
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "ram_demux_dslx",
    srcs = ["ram_demux.x"],
    deps = [
        "//xls/examples:ram_dslx",
    ],
)

xls_dslx_test(
    name = "ram_demux_dslx_test",
    dslx_test_args = {"compare": "none"},
    library = ":ram_demux_dslx",
)

xls_dslx_verilog(
    name = "ram_demux_verilog",
    codegen_args = {
        "module_name": "RamDemux",
        "generator": "pipeline",
        "delay_model": "asap7",
        "ram_configurations": ",".join([
            "{ram_name}:1R1W:{rd_req}:{rd_resp}:{wr_req}:{wr_resp}:{latency}".format(
                latency = 5,
                ram_name = "ram{}".format(num),
                rd_req = "ram_demux__rd_req{}_s".format(num),
                rd_resp = "ram_demux__rd_resp{}_r".format(num),
                wr_req = "ram_demux__wr_req{}_s".format(num),
                wr_resp = "ram_demux__wr_resp{}_r".format(num),
            )
            for num in range(2)
        ]),
        "pipeline_stages": "6",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "RamDemuxInst",
    library = ":ram_demux_dslx",
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__ram_demux__RamDemuxInst__RamDemux_0__5_8_0_8_5_next",
    },
    verilog_file = "ram_demux.v",
)

xls_benchmark_ir(
    name = "ram_demux_opt_ir_benchmark",
    src = "ram_demux_verilog.opt.ir",
    benchmark_ir_args = {
        "top": "__ram_demux__RamDemuxInst__RamDemux_0__5_8_0_8_5_next",
    },
    codegen_args = {
        "pipeline_stages": "10",
    },
)

verilog_library(
    name = "ram_demux_verilog_lib",
    srcs = [
        ":ram_demux.v",
    ],
)

synthesize_rtl(
    name = "ram_demux_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "RamDemux",
    deps = [
        ":ram_demux_verilog_lib",
    ],
)

benchmark_synth(
    name = "ram_demux_benchmark_synth",
    synth_target = ":ram_demux_synth_asap7",
)

place_and_route(
    name = "ram_demux_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":ram_demux_synth_asap7",
    target_die_utilization_percentage = "5",
)

xls_dslx_verilog(
    name = "ram_demux_naive_verilog",
    codegen_args = {
        "module_name": "RamDemuxNaive",
        "generator": "pipeline",
        "delay_model": "asap7",
        "ram_configurations": ",".join([
            "{ram_name}:1R1W:{rd_req}:{rd_resp}:{wr_req}:{wr_resp}:{latency}".format(
                latency = 5,
                ram_name = "ram{}".format(num),
                rd_req = "ram_demux__rd_req{}_s".format(num),
                rd_resp = "ram_demux__rd_resp{}_r".format(num),
                wr_req = "ram_demux__wr_req{}_s".format(num),
                wr_resp = "ram_demux__wr_resp{}_r".format(num),
            )
            for num in range(2)
        ]),
        "pipeline_stages": "6",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "RamDemuxNaiveInst",
    library = ":ram_demux_dslx",
    opt_ir_args = {
        "top": "__ram_demux__RamDemuxNaiveInst__RamDemuxNaive_0__5_8_0_8_next",
    },
    verilog_file = "ram_demux_naive.v",
)

xls_benchmark_ir(
    name = "ram_demux_naive_opt_ir_benchmark",
    src = "ram_demux_naive_verilog.opt.ir",
    benchmark_ir_args = {
        "top": "__ram_demux__RamDemuxNaiveInst__RamDemuxNaive_0__5_8_0_8_next",
    },
    codegen_args = {
        "pipeline_stages": "10",
    },
)

verilog_library(
    name = "ram_demux_naive_verilog_lib",
    srcs = [
        ":ram_demux_naive.v",
    ],
)

synthesize_rtl(
    name = "ram_demux_naive_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "RamDemuxNaive",
    deps = [
        ":ram_demux_naive_verilog_lib",
    ],
)

benchmark_synth(
    name = "ram_demux_naive_benchmark_synth",
    synth_target = ":ram_demux_naive_synth_asap7",
)

place_and_route(
    name = "ram_demux_naive_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":ram_demux_naive_synth_asap7",
    target_die_utilization_percentage = "5",
)

xls_dslx_library(
    name = "fse_table_creator_dslx",
    srcs = ["fse_table_creator.x"],
    deps = [
        ":common_dslx",
        ":fse_table_iterator_dslx",
        ":ram_wr_handler_dslx",
        "//xls/examples:ram_dslx",
    ],
)

xls_dslx_test(
    name = "fse_table_creator_dslx_test",
    library = ":fse_table_creator_dslx",
)

xls_dslx_verilog(
    name = "fse_table_creator_verilog",
    codegen_args = {
        "module_name": "FseTableCreator",
        "delay_model": "asap7",
        "pipeline_stages": "4",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "FseTableCreatorInst",
    library = ":fse_table_creator_dslx",
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__fse_table_creator__FseTableCreatorInst__FseTableCreator_0__8_16_1_256_16_8_48_3_256_16_8_16_1_256_16_next",
    },
    verilog_file = "fse_table_creator.v",
)

xls_benchmark_ir(
    name = "fse_table_creator_opt_ir_benchmark",
    src = ":fse_table_creator_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "10",
        "delay_model": "asap7",
    },
)

xls_benchmark_verilog(
    name = "fse_table_creator_verilog_benchmark",
    verilog_target = "fse_table_creator_verilog",
)

verilog_library(
    name = "fse_table_creator_lib",
    srcs = [
        ":fse_table_creator.v",
    ],
)

synthesize_rtl(
    name = "fse_table_creator_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "FseTableCreator",
    deps = [
        ":fse_table_creator_lib",
    ],
)

benchmark_synth(
    name = "fse_table_creator_benchmark_synth",
    synth_target = ":fse_table_creator_asap7",
)

place_and_route(
    name = "fse_table_creator_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":fse_table_creator_asap7",
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "fse_dec_dslx",
    srcs = [
        "fse_dec.x",
    ],
    deps = [
        ":common_dslx",
        ":math_dslx",
        ":shift_buffer_dslx",
        "//xls/examples:ram_dslx",
    ],
)

xls_dslx_test(
    name = "fse_dec_dslx_test",
    library = ":fse_dec_dslx",
    tags = ["manual"],
)

xls_dslx_verilog(
    name = "fse_dec_verilog",
    codegen_args = {
        "module_name": "FseDecoder",
        "delay_model": "asap7",
        "pipeline_stages": "8",
        "reset": "rst",
        "use_system_verilog": "false",
    },
    dslx_top = "FseDecoder",
    library = ":fse_dec_dslx",
    tags = ["manual"],
    verilog_file = "fse_dec.v",
)

xls_benchmark_ir(
    name = "fse_dec_opt_ir_benchmark",
    src = ":fse_dec_verilog.opt.ir",
    benchmark_ir_args = {
        "delay_model": "asap7",
        "pipeline_stages": "3",
    },
    tags = ["manual"],
)

verilog_library(
    name = "fse_dec_verilog_lib",
    srcs = [
        ":fse_dec.v",
    ],
    tags = ["manual"],
)

synthesize_rtl(
    name = "fse_dec_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    tags = ["manual"],
    top_module = "FseDecoder",
    deps = [
        ":fse_dec_verilog_lib",
    ],
)

benchmark_synth(
    name = "fse_dec_benchmark_synth",
    synth_target = ":fse_dec_synth_asap7",
    tags = ["manual"],
)

place_and_route(
    name = "fse_dec_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    die_height_microns = 100,
    die_width_microns = 100,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":fse_dec_synth_asap7",
    tags = ["manual"],
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "literals_dispatcher_dslx",
    srcs = [
        "literals_dispatcher.x",
    ],
    deps = [
        ":common_dslx",
    ],
)

xls_dslx_test(
    name = "literals_dispatcher_dslx_test",
    library = ":literals_dispatcher_dslx",
)

xls_dslx_verilog(
    name = "literals_dispatcher_verilog",
    codegen_args = {
        "module_name": "LiteralsDispatcher",
        "delay_model": "asap7",
        "pipeline_stages": "1",
        "reset": "rst",
        "worst_case_throughput": "1",
        "use_system_verilog": "false",
    },
    dslx_top = "LiteralsDispatcher",
    library = ":literals_dispatcher_dslx",
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__literals_dispatcher__LiteralsDispatcher_0_next",
    },
    verilog_file = "literals_dispatcher.v",
)

xls_benchmark_ir(
    name = "literals_dispatcher_opt_ir_benchmark",
    src = ":literals_dispatcher_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "1",
        "delay_model": "asap7",
    },
)

xls_benchmark_verilog(
    name = "literals_dispatcher_verilog_benchmark",
    verilog_target = "literals_dispatcher_verilog",
)

verilog_library(
    name = "literals_dispatcher_verilog_lib",
    srcs = [
        ":literals_dispatcher.v",
    ],
)

synthesize_rtl(
    name = "literals_dispatcher_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "LiteralsDispatcher",
    deps = [
        ":literals_dispatcher_verilog_lib",
    ],
)

benchmark_synth(
    name = "literals_dispatcher_benchmark_synth",
    synth_target = ":literals_dispatcher_synth_asap7",
)

place_and_route(
    name = "literals_dispatcher_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    die_height_microns = 50,
    die_width_microns = 50,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":literals_dispatcher_synth_asap7",
    target_die_utilization_percentage = "10",
)

xls_dslx_library(
    name = "rle_literals_dec_dslx",
    srcs = [
        "rle_literals_dec.x",
    ],
    deps = [
        ":common_dslx",
        "//xls/modules/rle:rle_common_dslx",
        "//xls/modules/rle:rle_dec_dslx",
    ],
)

xls_dslx_test(
    name = "rle_literals_dec_dslx_test",
    library = ":rle_literals_dec_dslx",
)

xls_dslx_verilog(
    name = "rle_literals_dec_verilog",
    codegen_args = {
        "module_name": "rle_literals_dec",
        "delay_model": "asap7",
        "pipeline_stages": "2",
        "reset": "rst",
        "worst_case_throughput": "1",
        "use_system_verilog": "false",
    },
    dslx_top = "RleLiteralsDecoder",
    library = ":rle_literals_dec_dslx",
    opt_ir_args = {
        "inline_procs": "true",
        "top": "__rle_literals_dec__RleLiteralsDecoder__BatchPacker_0_next",
    },
    verilog_file = "rle_literals_dec.v",
)

xls_benchmark_ir(
    name = "rle_literals_dec_opt_ir_benchmark",
    src = ":rle_literals_dec_verilog.opt.ir",
    benchmark_ir_args = {
        "pipeline_stages": "2",
        "delay_model": "asap7",
    },
)

verilog_library(
    name = "rle_literals_dec_verilog_lib",
    srcs = [
        ":rle_literals_dec.v",
    ],
)

synthesize_rtl(
    name = "rle_literals_dec_synth_asap7",
    standard_cells = "@org_theopenroadproject_asap7sc7p5t_28//:asap7-sc7p5t_rev28_rvt",
    top_module = "rle_literals_dec",
    deps = [
        ":rle_literals_dec_verilog_lib",
    ],
)

benchmark_synth(
    name = "rle_literals_dec_benchmark_synth",
    synth_target = ":rle_literals_dec_synth_asap7",
)

place_and_route(
    name = "rle_literals_dec_place_and_route",
    clock_period = "750",
    core_padding_microns = 2,
    min_pin_distance = "0.5",
    placement_density = "0.30",
    stop_after_step = "global_routing",
    synthesized_rtl = ":rle_literals_dec_synth_asap7",
    target_die_utilization_percentage = "10",
)
